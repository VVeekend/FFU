on_actions = {
	on_startup = {
		effect = {
			SER = {
				country_event = { id = ww1_franzferdinand.2 days = 1304 }
				country_event = { id = ww1_firstbalkan.4 days = 609 }
				country_event = { id = ww1_firstbalkan.2 days = 578 }
			}
			SWI = {
				country_event = { id = ww1_firstbalkan.40 days = 790 }
			}
			every_country={
				limit={
					is_playable_country=yes
				}
				set_rule = {
					can_use_kamikaze_pilots = yes
				}
				add_ideas = peace_training
				set_variable = { super_events_enabled = 2 }
			}
			if = {
				limit = {
					has_game_rule = {
						rule = FFU_navy_race
						option = RACE
					}
				}
				every_country = {
					limit={
						is_playable_country=yes
					}
					transfer_navy = {
						target = SWI
					}
					add_ideas = naval_race
				}
			}
		}
	}
	on_monthly = {
		effect = {
			every_country={
				limit = { 
					is_playable_country=yes
					NOT = {
						OR = {
							has_war = yes
							has_idea = peace_training 
						}
					} 
				}
				add_ideas = peace_training
			}
		}
	}
	on_state_control_changed {
		effect = {
			if = {
				limit = {
					tag = TUR
					FROM.FROM = { state = 152 }
					FROM = { original_tag = SER }
					NOT = { has_global_flag = balkan_war_over }
				}
				set_global_flag = balkan_war_over
				TUR = { 
					country_event = { id = ww1_firstbalkan.200 } 
					TUR = { white_peace = SER }		
					SER = { white_peace = TUR }
					BUL = { white_peace = TUR }
					GRE = { white_peace = TUR }
					MNT = { white_peace = TUR }
				}
			}
		}
	}
	on_capitulation = {
		effect = { 
			if = {
				limit = { 
					original_tag = RUS
					SOV = { has_war_with = RUS }
				}
				SOV = {
					annex_country = {
						target = RUS
						transfer_troops = no
					}
				}
			}
			if = {
				limit = { 
					original_tag = FIN
					SOV = { has_war_with = FIN }
				}
				SOV = {
					annex_country = {
						target = FIN
						transfer_troops = no
					}
					every_state = {
						limit = {
							# SOV will get the same core as RUS
							#is_claimed_by = RUS
							is_core_of = FIN
						}
						SOV = {
							add_state_core = PREV
						}
					}
				}
			}
		}
	}
}